<- Matrix ----------------------------------------------------------------------
The Matrix class handles 4x4 Matrices.

It can represent 4 matrices:
• The identity matrix
• The translation matrices ("translate")
• The scale change matrices ("scale")
• The rotation matrices ("rotate")
• the projection matrices ("project")


There is 7 Class constants:
IDENTITY	= 'IDENTITY'
SCALE		= 'SCALE'
RX			= 'Ox ROTATION'
RY			= 'Oy ROTATION'
RZ			= 'Oz ROTATION'
TRANSLATION	= 'TRANSLATION'
PROJECTION	= 'PROJECTION'


The Class’ constructor is waiting for an array. The following keys are required:

• ’preset’:
	the matrix type (mandatory). 
	The value must be one of the Class constants previoulsy defined.

• ’scale’:
	the scale factor, mandatory when ’preset’ is worth SCALE.

• ’angle’:
	the rotation angle in radians, mandatory when ’preset’ is worth RX,
	RY or RZ.

• ’vtc’:
	translation vector, mandatory when ’preset’ is worth TRANSLATION.

• ’fov’:
	projection field of view in degrees,
	mandatory when ’preset’ is worth PROJECTION.

• ’ratio’:
	projected image ratio, mandatory when ’preset’ is worth PROJECTION.

• ’near’:
	projection’s near clipping plane mandatory when ’preset’ is worth PROJECTION.

• ’far’:
	projection’s far clipping plane mandatory when ’preset’ is worth PROJECTION.


Once a matrix is instantiated, its status is final => no Setters.

The class provides the following methods :

Matrix mult( Matrix $rhs );
Returns the multiplication of both matrices.

Vertex transformVertex( Vertex $vtx );
Returns new vertex resulting from transformation of the vertex by the matrix.
---------------------------------------------------------------------- Matrix ->
